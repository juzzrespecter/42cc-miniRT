

void	*mlx_init():																			inicia la conexión entre el software y el display

void	*mlx_new_window(void *mlx_ptr, int size_x, int size_y, char *title):					crea una nueva ventana en la pantalla
int		mlx_clear_window(void *mlx_ptr, void *win_ptr):											limpia a negro la vetana creada	
int		mlx_destroy_window(void *mlx_ptr, void *win_ptr):										destruye la ventana

void 	*mlx_new_image(void *mlx_ptr, int width, int height):									crea una nueva imagen en la memoria
void 	*mlx_put_image_to_window(void *mlx_ptr, void *win_ptr, void *img_ptr, int x, int y):	mete la imagen dentro de la ventana especificada
char	*mlx_get_data_addr(void *img_ptr, int *bits_per_pixel, int *size_line, int *endian):	devuelve información sobre la imagen creada
int		mlx_destroy_image(void *mlx_ptr, void *img_ptr);										destruye la imagen

int		mlx_pixel_put(void *mlx_ptr, void *win_ptr, int x, int y, int color);					dibuja un pixel definido en una ventana
int		mlx_string_put(void *mlx_ptr, void *win_ptr, int x, int y, int color, char *string);	dibuja un string de pixeles en una ventana

int		mlx_loop(void *mlx_ptr);																loop infinito, espera un evento y llama a una función asociada a éste
int		mlx_key_hook(void *win_ptr, int (*funct_ptr)(), void *param);							evento de teclado
int		mlx_mouse_hook(void *win_ptr, int (*funct_ptr)(), void *param);							evento de ratón
int		mlx_expose_hook(void *win_ptr, int (*funct_ptr)(), void *param);						evento de ventana
int		mlx_loop_hook(void *mlx_ptr, int (*funct_ptr)(), void *param);							evento de loop
